#!/bin/bash

# Default values
MODE=""
MUST_GATHER_DIR=""

# Help message
usage() {
  cat <<EOF
Usage: gather [OPTIONS]

Options:
  --online                  Run must-gather on a connected OpenShift cluster (default if no options are provided).
  --offline --must-gather-dir <directory>  Run must-gather offline using the specified directory.
  -h, --help                Show this help message.
EOF
  exit 0
}

# Parse arguments
while [[ $# -gt 0 ]]; do
  case $1 in
    --online)
      MODE="online"
      shift
      ;;
    --offline)
      MODE="offline"
      shift
      ;;
    --must-gather-dir)
      MUST_GATHER_DIR=$2
      if [[ -z "$MUST_GATHER_DIR" ]]; then
        echo "Error: --must-gather-dir requires a directory argument."
        usage
      fi
      shift 2
      ;;
    -h|--help)
      usage
      ;;
    *)
      echo "Unknown option: $1"
      usage
      ;;
  esac
done

# Default to online mode if no mode is set
if [[ -z "$MODE" ]]; then
  MODE="online"
fi

# Validate mode and directory for offline
if [[ "$MODE" == "offline" && -z "$MUST_GATHER_DIR" ]]; then
  echo "Error: --must-gather-dir is required for offline mode."
  usage
fi

# Function to fetch the cluster version
get_cluster_version() {
  echo "Fetching OpenShift cluster version..."
  FULL_CLUSTER_VERSION=$(oc get clusterversion -o jsonpath='{.items[0].status.desired.version}')
  if [[ -z "$FULL_CLUSTER_VERSION" ]]; then
    echo "Error: Unable to determine the OpenShift cluster version."
    exit 1
  fi

  # Extract major.minor version (e.g., 4.14 from 4.14.1)
  CLUSTER_VERSION=$(echo "$FULL_CLUSTER_VERSION" | awk -F. '{print $1 "." $2}')
  echo "Cluster version detected: $CLUSTER_VERSION"
}

# Function to run in online mode
run_online() {
  echo "Running must-gather in online mode..."

  # Ensure 'oc' is installed
  if ! command -v oc &>/dev/null; then
    echo "Error: 'oc' command not found. Please install the OpenShift CLI."
    exit 1
  fi

  # Fetch cluster version
  get_cluster_version

  # Clone RAN and CORE directories
  RAN_REPO="https://github.com/openshift-kni/cnf-features-deploy.git"
  CORE_REPO="https://github.com/openshift-kni/telco-reference.git"

  # Run comparisons
  echo "Running RAN comparison with data from /tmp/ran-metadata..."
  git clone $RAN_REPO
  oc cluster-compare -r cnf-features-deploy/ztp/kube-compare-reference/metadata.yaml || echo "RAN comparison failed."

  echo "Running CORE comparison with data from /tmp/core-metadata..."
  git clone $CORE_REPO
  oc cluster-compare -r telco-reference/telco-core/configuration/reference-crs-kube-compare/metadata.yaml || echo "CORE comparison failed."
}

# Function to run in offline mode
run_offline() {
  echo "Running must-gather in offline mode using directory: $MUST_GATHER_DIR"

  # Ensure 'oc' is installed
  if ! command -v oc &>/dev/null; then
    echo "Error: 'oc' command not found. Please install the OpenShift CLI."
    exit 1
  fi

  # Fetch cluster version
  get_cluster_version

  # Clone RAN and CORE directories
  RAN_REPO="https://github.com/openshift-kni/cnf-features-deploy.git"
  CORE_REPO="https://github.com/openshift-kni/telco-reference.git"

  # Run comparisons
  echo "Running RAN comparison with data from /tmp/ran-metadata..."
  git clone $RAN_REPO
  oc cluster-compare -r cnf-features-deploy/ztp/kube-compare-reference/metadata.yaml -f "must-gather*/*/cluster-scoped-resources","must-gather*/*/namespaces" -R || echo "RAN comparison failed."

  echo "Running CORE comparison with data from /tmp/core-metadata..."
  git clone $CORE_REPO
  oc cluster-compare -r telco-reference/telco-core/configuration/reference-crs-kube-compare/metadata.yaml -f "must-gather*/*/cluster-scoped-resources","must-gather*/*/namespaces" -R || echo "CORE comparison failed."

}

# Execute based on mode
case $MODE in
  online)
    run_online
    ;;
  offline)
    run_offline
    ;;
  *)
    echo "Error: Unknown mode. Exiting."
    exit 1
    ;;
esac
